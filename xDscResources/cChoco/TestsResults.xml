<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="102" errors="0" failures="0" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2016-12-02" time="19:44:29">
  <environment user="appveyor" machine-name="APPVEYOR-VM" cwd="C:\projects\cchoco" user-domain="APPVEYOR-VM" platform="Microsoft Windows Server 2012 R2 Datacenter|C:\windows|\Device\Harddisk0\Partition1" nunit-version="2.5.8.0" os-version="6.3.9600" clr-version="4.0.30319.42000" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="Powershell" name="Pester" executed="True" result="Success" success="True" time="23.3048" asserts="0">
    <results>
      <test-suite type="TestFixture" name="Testing cChocoInstaller loaded from C:\projects\cchoco\DSCResources\cChocoInstaller\cChocoInstaller.psm1" executed="True" result="Success" success="True" time="3.3713" asserts="0" description="Testing cChocoInstaller loaded from C:\projects\cchoco\DSCResources\cChocoInstaller\cChocoInstaller.psm1">
        <results>
          <test-case description="DummyTest $true should be $true" name="Testing cChocoInstaller loaded from C:\projects\cchoco\DSCResources\cChocoInstaller\cChocoInstaller.psm1.DummyTest $true should be $true" time="3.3713" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="Testing cChocoPackageInstall loaded from cChocoPackageInstall.psm1" executed="True" result="Success" success="True" time="1.9197" asserts="0" description="Testing cChocoPackageInstall loaded from cChocoPackageInstall.psm1">
        <results>
          <test-case description="Test-TargetResource -ensure 'Present' should return False" name="Testing cChocoPackageInstall loaded from cChocoPackageInstall.psm1.Test-TargetResource -ensure 'Present' should return False" time="1.5851" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Test-TargetResource -ensure 'Absent' should return True" name="Testing cChocoPackageInstall loaded from cChocoPackageInstall.psm1.Test-TargetResource -ensure 'Absent' should return True" time="0.0352" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Test-TargetResource -ensure 'Absent' -version '1.0.0' should return True" name="Testing cChocoPackageInstall loaded from cChocoPackageInstall.psm1.Test-TargetResource -ensure 'Absent' -version '1.0.0' should return True" time="0.0297" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Test-TargetResource -ensure 'Absent' -AutoUpgrade should return True" name="Testing cChocoPackageInstall loaded from cChocoPackageInstall.psm1.Test-TargetResource -ensure 'Absent' -AutoUpgrade should return True" time="0.0212" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Test-TargetResource -ensure 'Absent' -version '1.0.0' -AutoUpgrade should return True" name="Testing cChocoPackageInstall loaded from cChocoPackageInstall.psm1.Test-TargetResource -ensure 'Absent' -version '1.0.0' -AutoUpgrade should return True" time="0.0325" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Test-TargetResource -ensure 'Present' should return True" name="Testing cChocoPackageInstall loaded from cChocoPackageInstall.psm1.Test-TargetResource -ensure 'Present' should return True" time="0.0598" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Test-TargetResource -ensure 'Absent' should return False" name="Testing cChocoPackageInstall loaded from cChocoPackageInstall.psm1.Test-TargetResource -ensure 'Absent' should return False" time="0.0779" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Test-TargetResource -ensure 'Present' -version '1.0.0' should return True" name="Testing cChocoPackageInstall loaded from cChocoPackageInstall.psm1.Test-TargetResource -ensure 'Present' -version '1.0.0' should return True" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Test-TargetResource -ensure 'Present' -version '1.0.1' should return False" name="Testing cChocoPackageInstall loaded from cChocoPackageInstall.psm1.Test-TargetResource -ensure 'Present' -version '1.0.1' should return False" time="0.0356" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="Testing all Modules against default PSScriptAnalyzer rule-set" executed="True" result="Success" success="True" time="12.6496" asserts="0" description="Testing all Modules against default PSScriptAnalyzer rule-set">
        <results>
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" time="0.6936" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" time="0.0499" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" time="0.0507" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" time="0.0516" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" time="0.0466" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" time="0.0491" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0523" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" time="1.1702" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSReservedCmdletChar" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSReservedCmdletChar" time="0.2951" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSReservedParams" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSReservedParams" time="0.0506" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" time="0.0492" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" time="0.0494" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" time="0.0516" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0449" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" time="0.0488" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" time="0.1031" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" time="0.0566" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" time="0.0459" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" time="0.0742" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSMisleadingBacktick" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSMisleadingBacktick" time="0.0565" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" time="0.0438" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" time="0.0489" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSProvideCommentHelp" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSProvideCommentHelp" time="0.3971" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" time="0.2072" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" time="0.1916" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" time="1.3784" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseCompatibleCmdlets" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseCompatibleCmdlets" time="0.0803" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssignments" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssignments" time="0.0737" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseLiteralInitializerForHashtable" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseLiteralInitializerForHashtable" time="0.0623" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" time="0.0549" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUsePSCredentialType" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUsePSCredentialType" time="0.0536" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSShouldProcess" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSShouldProcess" time="0.6596" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" time="0.0562" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseSingularNouns" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseSingularNouns" time="0.089" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" time="0.0446" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" time="0.0485" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0505" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" time="0.0464" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" time="0.0477" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" time="0.0448" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" time="0.065" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" time="0.0454" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" time="0.0457" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" time="0.0495" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" time="0.0468" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" time="0.0449" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0476" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" time="1.4219" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSReservedCmdletChar" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSReservedCmdletChar" time="0.3064" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSReservedParams" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSReservedParams" time="0.0471" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" time="0.0495" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" time="0.0466" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" time="0.0488" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0498" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" time="0.0448" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" time="0.0479" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" time="0.0453" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" time="0.0461" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" time="0.0591" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSMisleadingBacktick" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSMisleadingBacktick" time="0.0603" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" time="0.0473" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" time="0.0472" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSProvideCommentHelp" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSProvideCommentHelp" time="0.3013" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" time="0.0515" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" time="0.0449" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" time="1.4733" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseCompatibleCmdlets" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseCompatibleCmdlets" time="0.0552" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssignments" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssignments" time="0.0551" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseLiteralInitializerForHashtable" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseLiteralInitializerForHashtable" time="0.0478" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" time="0.0496" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUsePSCredentialType" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUsePSCredentialType" time="0.0463" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSShouldProcess" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSShouldProcess" time="0.3845" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" time="0.056" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseSingularNouns" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseSingularNouns" time="0.0528" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" time="0.0492" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" time="0.0449" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" time="0.0459" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" time="0.0469" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0509" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" time="0.0474" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" time="0.0468" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" time="0.0471" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="Testing all DSC resources using xDscResource designer." executed="True" result="Success" success="True" time="5.3641" asserts="0" description="Testing all DSC resources using xDscResource designer.">
        <results>
          <test-case description="Test-xDscResource should return $true" name="Testing all DSC resources using xDscResource designer..Test-xDscResource should return $true" time="2.7079" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Test-xDscSchema should return true" name="Testing all DSC resources using xDscResource designer..Test-xDscSchema should return true" time="0.0874" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Test-xDscResource should return $true" name="Testing all DSC resources using xDscResource designer..Test-xDscResource should return $true" time="1.2125" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Test-xDscSchema should return true" name="Testing all DSC resources using xDscResource designer..Test-xDscSchema should return true" time="0.1274" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Test-xDscResource should return $true" name="Testing all DSC resources using xDscResource designer..Test-xDscResource should return $true" time="1.1225" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Test-xDscSchema should return true" name="Testing all DSC resources using xDscResource designer..Test-xDscSchema should return true" time="0.1063" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>